input,
textarea,
select {
    background-color: #fff;
    border-color: map-get($inputs, "border-color");
    border-radius: map-get($inputs, "border-radius");
    border-style: solid;
    border-width: map-get($inputs, "border-width");
    font-size: inherit;
    &:focus,
    &:active {
        @include no_offset_shadow($primary, 0.3, 5);
        outline: 0;
        border-color: desaturate(lighten($primary, 30%), 40%);
    }
}
input:not([type=checkbox]):not([type=radio]):not([type=submit]):not(.qty),
textarea, select {
    width: 100%;
}
// [ Checkbox ] //
input[type="checkbox"] {
    zoom: 1.1;
    transform: scale(1.1);
    -ms-transform: scale(1.1);
    -webkit-transform: scale(1.1);
    -o-transform: scale(1.1);
    -moz-transform: scale(1.1);
    transform-origin: 0 0;
    -ms-transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    -o-transform-origin: 0 0;
    -moz-transform-origin: 0 0;
}
label {
    position: relative;
}
label.cb-wrap {
    display: inline-flex;
    align-items: center;
    span {
        margin-left: 2px;
        font-size: 12px;
    }
}
// ! Disabled ! //
input:disabled,
button:disabled {
    pointer-events: none;
    cursor: not-allowed;
    background-color: map-get($inputs, "disabled");
    border-color: map-get($inputs, "disabled");
}
/* Buttons */
//[type="button"],
[type="reset"],
[type="image"],
[type="submit"],
a.submit {
    @extend .pri--btn;
    border-style: solid;
    border-width: 1px;
    cursor: pointer;
    font-weight: bold;
    text-transform: uppercase;
    justify-content: center;
}
.input {
    padding: map-get($inputs, "small");
}
input:-webkit-autofill,
textarea:-webkit-autofill {
    border-bottom: 1px solid map-get($generic, "green");
    -webkit-text-fill-color: #000;
    box-shadow: 0 0 0px 1000px #fff inset;
    -webkit-box-shadow: 0 0 0px 1000px #fff inset;
    transition: background-color 5000s ease-in-out 0s;
}
.plain {
    border: 0 none;
    background: transparent;
}